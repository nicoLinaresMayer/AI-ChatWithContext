public with sharing class DocumentService {
    
    public static List<Document__c> getDocumentsByType(String documentType){
    
        return [SELECT Id, Name FROM Document__c WHERE Type__c=:documentType];
    }

    public static List<Section__c> getDocumentSections(Id documentId){
        return [SELECT Id,Name FROM Section__c WHERE Document__c =:documentId ORDER BY Order__c ASC];
    }
    
    public static void updateDocument(String sectionToUpdate, String response){

        Section__c section = [SELECT ID,Content__c FROM Section__c WHERE Id=:sectionToUpdate LIMIT 1];
        section.Content__c = response;
        update section;
    }

    public static void autoGenerateDocument(Id documentId,Id sessionId, String model,Decimal temperature){
        // Obtengo las secciones
        List<Section__c> documentSections = [SELECT Id,Name,Content__c FROM Section__c WHERE Document__c =: documentId ORDER BY Order__c ASC];

        List<String> responses = new List<String>();
        // Itero sobre las secciones y pido una completion 
        for(Section__c documentSection : documentSections){
            String incomingPrompt =  'Can you write me a section called "' + documentSection.Name + '" for mentioned industry. Please don\'t include a '+documentSection.Name + ' word at the begin of response and don\'t include a conclusion ';
            
            String completion = PromptService.getChatCompletion(incomingPrompt,model,sessionId,temperature);
            system.debug(completion);
            documentSection.Content__c = completion;
        }
        update documentSections;
 


    }

    public static List<String> getDocumentTypes(){
        List<String> documentTypes = new List<String>();
        Schema.DescribeFieldResult fieldResult = Document__c.Type__c.getDescribe();
        
        for(Schema.PicklistEntry ple : fieldResult.getPicklistValues()){
           documentTypes.add(ple.getLabel());
        }
        return documentTypes;
    }
}